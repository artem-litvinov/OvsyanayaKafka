version: '3'
services:
  webserver:
    image: webserver
    build: ./webserver
    restart: always
    environment:
      - WEBSERVER_PORT=5000
      - CASSANDRA_HOST=cassandra
      - KAFKA_HOST=34.214.200.68
    depends_on:
      - cassandra
    ports:
      - "5000:5000"
      - "8000:8000"

  consumer:
    build: ./consumer
    restart: on-failure
    environment:
      - CASSANDRA_HOST=cassandra
      - KAFKA_HOST=34.214.200.68
    depends_on:
      - cassandra

  cassandra_prepare:
    build: ./cassandra_prepare
    restart: on-failure
    command: ./wait-for cassandra:9042 --
      cqlsh cassandra --cqlversion="3.4.4" -f prepare.cql
    environment:
      - CASSANDRA_HOST=cassandra
    depends_on:
      - cassandra

  cassandra:
    image: 'cassandra'
    environment:
      MAX_HEAP_SIZE: 2G
      HEAP_NEWSIZE: 1G
    deploy:
      resources:
        limits:
          memory: 2G

# Monitoring
  grafana:
    restart: on-failure
    image: 'grafana/grafana'
    env_file:
      - ./monitoring/config.monitoring
    depends_on:
      - prometheus
    ports:
      - '3000:3000'
  
  grafana_prepare:
    build: ./monitoring/grafana/.
    links:
      - grafana:grafana
    depends_on:
      - grafana
    restart: on-failure

  prometheus:
    restart: always
    image: prom/prometheus
    links:
      - cadvisor:cadvisor
      - webserver:webserver
    depends_on:
      - cadvisor
    volumes:
        - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
        - '-config.file=/etc/prometheus/prometheus.yml'
    ports:
        - '9090:9090'

  cadvisor:
    # Workaround to findutils bug
    restart: always
    build: ./monitoring/cadvisor/.
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    ports:
      - '8080:8080'
